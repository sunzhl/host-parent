<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.hosp.www.dao.mapper.TransportTaskMapper">
    <resultMap id="BaseResultMap" type="cn.com.hosp.www.dao.dto.TransportPatient">
        <id column="id"                    jdbcType="BIGINT"    property="id"/>
        <result column="task_name"         jdbcType="VARCHAR"   property="taskName"/>
        <result column="create_name"       jdbcType="VARCHAR" property="createName"/>
        <result column="create_time"       jdbcType="TIMESTAMP" property="createTime" javaType="java.time.LocalDateTime"/>
        <result column="task_type_name"    jdbcType="VARCHAR" property="taskTypeName"/>
        <result column="set_out_place_name" jdbcType="VARCHAR" property="setOutPlaceName"/>
        <result column="destination_name"   jdbcType="VARCHAR" property="destinationName"/>
        <result column="plan_start_time"    jdbcType="TIMESTAMP" property="planStartTime" javaType="java.time.LocalDateTime"/>
        <result column="finish_time"        jdbcType="INTEGER" property="finishTime"/>
        <result column="book_time"          jdbcType="INTEGER" property="bookTime"/>
        <result column="worker_name"        jdbcType="VARCHAR" property="workerName"/>
        <result column="worker_id"          jdbcType="BIGINT"  property="workerId"/>
        <result column="priority"           jdbcType="TINYINT" property="priority"/>
        <result column="state"              jdbcType="TINYINT" property="state"/>
        <result column="pro_id"             jdbcType="BIGINT"  property="proId"/>
        <result column="pro_number"         jdbcType="VARCHAR" property="proNumber"/>
        <result column="pro_name"           jdbcType="VARCHAR" property="proName"/>
        <result column="tool_name"          jdbcType="VARCHAR" property="toolName"/>
        <result column="cancel_reason"      jdbcType="VARCHAR" property="cancelReason"/>
        <result column="delay_reason"       jdbcType="VARCHAR" property="delayReason"/>
        <result column="task_desc"          jdbcType="VARCHAR" property="taskDesc"/>
        <result column="patient_name"       jdbcType="VARCHAR" property="patientName"/>
        <result column="pid"                jdbcType="BIGINT"  property="pid"/>
        <result column="age"                jdbcType="TINYINT" property="age"/>
        <result column="bed_number"         jdbcType="VARCHAR" property="bedNumber"/>
        <result column="number"             jdbcType="INTEGER" property="number"/>
        <result column="sex"                jdbcType="TINYINT" property="sex"/>
    </resultMap>

    <select id="queryByPage" parameterType="map" resultMap="BaseResultMap">
        select t.id, t.task_name, t.create_name, t.create_time,
        t.task_type_name, t.set_out_place_name, t.destination_name,
        t.plan_start_time, t.finish_time, t.book_time, t.worker_name, t.worker_id,
        t.priority, t.state, t.pro_id, t.pro_number,t.pro_name, t.tool_name,
        t.cancel_reason, t.delay_reason, t.task_desc,
        p.patient_name, p.id as pid, p.age, p.bed_number, p.number,p.sex
        from transport_task as t
        left join patient_info as p on t.id = p.task_id
        <where>
            <if test="proId != null">
                t.pro_id = #{proId, jdbcType=BIGINT}
            </if>
            <if test="states != null">
                and t.state in
                <foreach item="item" collection="states" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        limit #{start, jdbcType=INTEGER}, #{pageSize, jdbcType=INTEGER}
    </select>
    
    <select id="queryCount" parameterType="map" resultType="long">
        select count(id) from transport_task
        <where>
            <if test="proId != null">
                pro_id = #{proId, jdbcType=BIGINT}
            </if>
            <if test="states != null and states.size() &gt; 0">
                and state in
                <foreach item="item" collection="states" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

</mapper>